---
- hosts: jenkins_controller
  become: yes
  remote_user: ec2-user
  become_user: root
  tasks:
    - name: install dependencies
      yum:
        name: "{{ package }} "
        state: present
      vars:
        package:
        - wget
        - git

    - name: clone repo
      git:
        repo: https://github.com/ACloudGuru-Resources/content-terraform-jenkins-updated.git
        dest: /tmp/jenkins

    - name: Setup Jenkins Repo
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import Jenkins Repo GPG key
      rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key

    - name: install java-openjdk11
      shell: "amazon-linux-extras install java-openjdk11 -y"

    - name: install Jenkins
      yum:
        name: jenkins
        state: present

    - name: Temporarily Stop Jenkins
      service:
        name: jenkins
        state: stopped

    - name: Delete Jenkins default dir
      file:
        state: absent
        path: /var/lib/jenkins

    - name: Copy over cloned Jenkins /var/lib/jenkins
      copy:
        remote_src: yes
        src: /tmp/jenkins/jenkins
        dest: /var/lib

    - name: Restore jenkins user ownership on /var/lib/jenkins
      file:
        path: /var/lib/jenkins
        state: directory
        recurse: yes
        owner: jenkins

    - name: Start Jenkins
      service:
        name: jenkins
        state: started
        enabled: yes

- hosts: jenkins_agents
  become: yes
  remote_user: ec2-user
  tasks:
    - name: Generate SSH Keypair
      openssh_keypair:
        path: /home/ec2-user/.ssh/id_rsa
        type: rsa
        size: 2048
        group: ec2-user
        owner: ec2-user

    - name: Add own key to authorized_keys file
      shell: "cat /home/ec2-user/.ssh/id_rsa.pub >> /home/ec2-user/.ssh/authorized_keys && chmod 600 /home/ec2-user/.ssh/authorized_keys"

    - name: Copy over Jenkins Worker Node creation payload xml
      vars:
        ipv4: "{{ instance_private_ip }}"
      template:
        src: node.j2
        dest: /home/ec2-user/node.xml
        owner: ec2-user
        mode: '0644'

    - name: Read generated private key id_rsa
      slurp:
        src: /home/ec2-user/.ssh/id_rsa
      register: pkey

    - name: Copy over creds.xml and create Jenkins credential
      vars:
        priv_key: "{{ pkey['content'] | b64decode }}"
        ipv4: "{{ instance_private_ip }}"
      template:
        src: cred-privkey.j2
        dest: /home/ec2-user/creds.xml

    - name: install dependencies
      yum:
        name: "{{ package }} "
      vars:
        package:
        - wget
        - git

    - name: Setup Jenkins Repo
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import Jenkins Repo GPG key
      rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key

    - name: install java-openjdk11
      shell: "amazon-linux-extras install java-openjdk11 -y"

    - name: Get Jenkins CLI jar file
      vars:
        master: "{{ hostvars[groups['jenkins_controller'][0]].inventory_hostname }}"
      get_url:
        url: "http://{{ master }}:8080/jnlpJars/jenkins-cli.jar"
        dest: /home/ec2-user/jenkins-cli.jar
        force: yes
      register: download
      ignore_errors: yes
      until: download.status_code|default(200) == 200
      retries: 5
      delay: 5

    - name: Allow execute perm to jenkins-cli.jar
      file:
        path: /home/ec2-user/jenkins-cli.jar
        owner: ec2-user
        group: ec2-user
        mode: '0700'

    - name: Place Jenkins Auth file
      copy:
        src: jenkins_auth
        dest: /home/ec2-user/
        owner: ec2-user
        mode: '0600'

    - name: Create Jenkins Credential
      vars:
        master: "{{ hostvars[groups['jenkins_controller'][0]].inventory_hostname }}"
      shell: "cat /home/ec2-user/creds.xml | java -jar /home/ec2-user/jenkins-cli.jar -auth @/home/ec2-user/jenkins_auth -s http://{{master}}:8080 create-credentials-by-xml system::system::jenkins _"
#    cloudbees-credentials plugin is deprecated - https://plugins.jenkins.io/cloudbees-credentials/releases/

    - name: Register node as worker
      vars:
        master: "{{ hostvars[groups['jenkins_controller'][0]].inventory_hostname }}"
      shell: 'cat /home/ec2-user/node.xml | java -jar /home/ec2-user/jenkins-cli.jar -auth @/home/ec2-user/jenkins_auth -s http://{{ master }}:8080 create-node'
